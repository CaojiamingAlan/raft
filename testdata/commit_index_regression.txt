# Test when a follower does not persist its committed entries.
# For more background, see
# https://github.com/etcd-io/etcd/issues/10166
# and
# https://github.com/etcd-io/raft/pull/25

log-level none
----
ok

# Add 3 nodes with allow-invariant-violations enabled. Without this option, the
# test will panic.
add-nodes 3 voters=(1,2,3) index=10 allow-invariant-violations=true
----
ok

campaign 1
----
ok

stabilize
----
ok (quiet)

propose 1 prop_1_12
----
ok

stabilize
----
ok (quiet)

# Set a checkpoint for node 3. This is the snapshot from which node 3 will recover.
# Any changes after this snapshot will be lost. i.e. node 3 is truncated from this point.
truncate_at 3
----
ok (quiet)

propose 1 prop_1_13
----
ok

propose 1 prop_1_14
----
ok

propose 1 prop_1_15
----
ok

# Send MsgApp to nodes 2 and 3
stabilize 1
----
ok (quiet)

# Reply to node 1, replicate a copy but not yet commit the entries.
stabilize 2 3
----
ok (quiet)

# Now node 1 commits the entry, and the commit msg to node 3 is pending
stabilize 1 2
----
ok (quiet)

log-level debug
----
ok

# Truncate the log of node 3. Its commit index is regressed.
truncate 3
----
log is empty: first index=13, last index=12

# Node 3 will receive a commit message with index 15, but it does not have that
# entry since its log is truncated.
stabilize
----
> 3 receiving messages
  1->3 MsgApp Term:1 Log:1/15 Commit:13
  DEBUG 3 [logterm: 0, index: 15] rejected MsgApp [logterm: 1, index: 15] from 1
  1->3 MsgApp Term:1 Log:1/15 Commit:14
  DEBUG 3 [logterm: 0, index: 15] rejected MsgApp [logterm: 1, index: 15] from 1
  1->3 MsgApp Term:1 Log:1/15 Commit:15
  DEBUG 3 [logterm: 0, index: 15] rejected MsgApp [logterm: 1, index: 15] from 1
> 3 handling Ready
  Ready MustSync=false:
  Messages:
  3->1 MsgAppResp Term:1 Log:1/15 Rejected (Hint: 12)
  3->1 MsgAppResp Term:1 Log:1/15 Rejected (Hint: 12)
  3->1 MsgAppResp Term:1 Log:1/15 Rejected (Hint: 12)
> 1 receiving messages
  3->1 MsgAppResp Term:1 Log:1/15 Rejected (Hint: 12)
  DEBUG 1 received MsgAppResp(rejected, hint: (index 12, term 1)) from 3 for index 15
  3->1 MsgAppResp Term:1 Log:1/15 Rejected (Hint: 12)
  DEBUG 1 received MsgAppResp(rejected, hint: (index 12, term 1)) from 3 for index 15
  3->1 MsgAppResp Term:1 Log:1/15 Rejected (Hint: 12)
  DEBUG 1 received MsgAppResp(rejected, hint: (index 12, term 1)) from 3 for index 15

# Trigger a round of empty MsgApp "probe" from leader. Normally this will panic,
# since the durability request of raft is violated. However, if the user want to loosen
# the invariant checks, we can try to recover from it with a naive approach.
tick-heartbeat 1
----
ok

stabilize
----
> 1 handling Ready
  Ready MustSync=false:
  Messages:
  1->2 MsgHeartbeat Term:1 Log:0/0 Commit:15
  1->3 MsgHeartbeat Term:1 Log:0/0 Commit:15
> 2 receiving messages
  1->2 MsgHeartbeat Term:1 Log:0/0 Commit:15
> 3 receiving messages
  1->3 MsgHeartbeat Term:1 Log:0/0 Commit:15
  FATAL tocommit(15) is out of range [lastIndex(12)]. Was the raft log corrupted, truncated, or lost?
> 2 handling Ready
  Ready MustSync=false:
  Messages:
  2->1 MsgHeartbeatResp Term:1 Log:0/0
> 3 handling Ready
  Ready MustSync=false:
  Messages:
  3->1 MsgHeartbeatResp Term:1 Log:0/0 Rejected (Hint: 12) Commit:15
> 1 receiving messages
  2->1 MsgHeartbeatResp Term:1 Log:0/0
  3->1 MsgHeartbeatResp Term:1 Log:0/0 Rejected (Hint: 12) Commit:15
  DEBUG 1 received MsgHeartbeatResp(rejected, hint: (index 12)) from 3 for index 15
  DEBUG 1 decreased progress of 3 to [StateReplicate match=12 next=13]
> 1 handling Ready
  Ready MustSync=false:
  Messages:
  1->3 MsgApp Term:1 Log:1/12 Commit:15 Entries:[1/13 EntryNormal "prop_1_13", 1/14 EntryNormal "prop_1_14", 1/15 EntryNormal "prop_1_15"]
> 3 receiving messages
  1->3 MsgApp Term:1 Log:1/12 Commit:15 Entries:[1/13 EntryNormal "prop_1_13", 1/14 EntryNormal "prop_1_14", 1/15 EntryNormal "prop_1_15"]
  INFO replace the unstable entries from index 13
> 3 handling Ready
  Ready MustSync=true:
  HardState Term:1 Vote:1 Commit:15
  Entries:
  1/13 EntryNormal "prop_1_13"
  1/14 EntryNormal "prop_1_14"
  1/15 EntryNormal "prop_1_15"
  CommittedEntries:
  1/13 EntryNormal "prop_1_13"
  1/14 EntryNormal "prop_1_14"
  1/15 EntryNormal "prop_1_15"
  Messages:
  3->1 MsgAppResp Term:1 Log:0/15
> 1 receiving messages
  3->1 MsgAppResp Term:1 Log:0/15

# All nodes caught up.
status 1
----
1: StateReplicate match=15 next=16
2: StateReplicate match=15 next=16
3: StateReplicate match=15 next=16

raft-log 1
----
1/11 EntryNormal ""
1/12 EntryNormal "prop_1_12"
1/13 EntryNormal "prop_1_13"
1/14 EntryNormal "prop_1_14"
1/15 EntryNormal "prop_1_15"

raft-log 3
----
1/13 EntryNormal "prop_1_13"
1/14 EntryNormal "prop_1_14"
1/15 EntryNormal "prop_1_15"
